/**
 * @file secret.h
 * @brief Template for sensitive configuration data
 * * Copy this file to secret.h with your credentials.
 * The secret.h file should NOT be committed to version control.
 */

#ifndef SECRET_H
#define SECRET_H

// --- WiFi Credentials ---
#define WIFI_SSID "YOUR_WIFI_SSID"
#define WIFI_PASSWORD "YOUR_WIFI_PASSWORD"

// --- WebSocket Server Configuration ---
// Choose one of the following URIs or add your own.
// #define WEBSOCKET_URI "wss://socketsbay.com/wss/v2/1/demo/"  // Public test WebSocket
// #define WEBSOCKET_URI "https://echo.websocket.org"           // Default public echo server for testing
#define WEBSOCKET_URI "ws://YOUR_WEBSOCKET_SERVER_IP/ws"      // Local WebSocket server (replace with your server's static IP)

#define WEBSOCKET_PORT 80                                     // WebSocket server port
#define ESP_WEBSOCKET_CLIENT_SEND_TIMEOUT_MS 2000             // Timeout for sending messages
#define ESP_WEBSOCKET_CLIENT_RETRY_MS 1000                    // Cooldown before re-sending messages

// --- AWS IoT Configuration ---
#define AWS_IOT_ENDPOINT "YOUR_AWS_IOT_ENDPOINT.iot.YOUR-REGION.amazonaws.com" // find it in AWS IOT config

// Optionally define a client ID. If not specified, the device's MAC address will be used.
// BE CAREFUL: That is NOT the AWS client id. This is the custom-made DEVICE ID.
#define AWS_IOT_CLIENT_ID "esp32-s3-client-1"

// --- MQTT Topic Structure ---
// These topics can use the CLIENT_ID above.
#define MQTT_TOPIC_BASE "embed"                                       // Base topic for all messages
#define MQTT_TOPIC_DEVICE MQTT_TOPIC_BASE "/" AWS_IOT_CLIENT_ID       // Base topic with device ID
#define MQTT_TOPIC_STATUS MQTT_TOPIC_DEVICE "/status"                 // Topic for device status
#define MQTT_TOPIC_BME280 MQTT_TOPIC_DEVICE "/bme280"                 // Topic for BME280 sensor data

#endif // SECRET_H