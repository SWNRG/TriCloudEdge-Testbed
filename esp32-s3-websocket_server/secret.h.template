/**
 * @file secret.h.template
 * @brief Template for sensitive configuration data.
 *
 * **INSTRUCTIONS:**
 * 1. Copy this file to a new file named `secret.h` in the directory (`/main/certificates/`).
 * 2. Fill in the placeholder values below with your actual credentials.
 * 3. The `secret.h` file is already listed in .gitignore and should NOT be committed to version control.
 */

#ifndef SECRET_H
#define SECRET_H

// --- WiFi Configuration ---
// Your WiFi network credentials
#define WIFI_SSID "YOUR_WIFI_SSID"
#define WIFI_PASSWORD "YOUR_WIFI_PASSWORD"


// --- AWS API Gateway Configuration ---
// The hostname of your API Gateway endpoint.
// Example: "xxxxxxxxxx.execute-api.us-east-1.amazonaws.com"
#define API_GATEWAY_HOST "xxxxxxxxxx.execute-api.your-region-1.amazonaws.com"

// The path for your API Gateway stage and resource.
// Example: "/prod/generateS3PresignedUrl"
#define API_GATEWAY_PATH "/your_stage/your_resource"


// --- AWS S3 Bucket Configuration ---
// The name of your S3 bucket (for reference, primarily used by the Lambda function).
#define S3_BUCKET_NAME "your-s3-bucket-name"

// The AWS region where your S3 bucket and other services are located.
// Example: "us-east-1"
#define S3_REGION "your-aws-region"


// --- AWS IoT Core Configuration ---
// Your AWS IoT Core endpoint URL (find this in the AWS IoT Core console settings).
#define AWS_IOT_ENDPOINT "mqtts://xxxxxxxxxxxxxx-ats.iot.your-region-1.amazonaws.com"

// A unique client ID for this device. Can be any string.
#define AWS_IOT_CLIENT_ID "my-esp32-s3-device-01"


// --- MQTT Topics ---
// These are derived from other settings but are defined here for clarity.
#define MQTT_TOPIC_BASE "embed"
#define MQTT_TOPIC_DEVICE MQTT_TOPIC_BASE "/" AWS_IOT_CLIENT_ID
#define MQTT_TOPIC_STATUS MQTT_TOPIC_DEVICE "/status"


// --- Embedded Certificates ---
// These declarations make the certificate files (embedded via CMakeLists.txt)
// available to the application code. You do not need to change these lines,
// just ensure your .pem and .key files are in the /certificates folder.
extern const char _binary_AmazonRootCA1_pem_start[];
extern const char _binary_new_certificate_pem_start[];
extern const char _binary_new_private_key_start[];


#endif // SECRET_H
